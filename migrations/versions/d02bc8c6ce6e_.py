"""empty message

Revision ID: d02bc8c6ce6e
Revises: 4b735dcbc700
Create Date: 2018-07-15 08:59:28.565952

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd02bc8c6ce6e'
down_revision = '4b735dcbc700'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('brandID', sa.Integer(), nullable=False),
    sa.Column('brandName', sa.String(length=150), nullable=True),
    sa.Column('productName', sa.String(length=150), nullable=True),
    sa.Column('totalProducts', sa.Integer(), nullable=True),
    sa.Column('availableProducts', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('brandID')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('brand_info')
    op.drop_table('challenge_desc')
    op.drop_table('admin')
    op.drop_column('challenges', 'created')
    op.drop_column('challenges', 'active')
    op.drop_column('challenges', 'whoUpdate')
    op.drop_column('challenges', 'challengeLanguage')
    op.drop_column('challenges', 'lastUpdate')
    op.drop_column('challenges', 'challengeLevel')
    op.drop_column('products', 'created')
    op.drop_column('products', 'active')
    op.drop_column('products', 'whoUpdate')
    op.drop_column('products', 'brandName')
    op.drop_column('products', 'lastUpdate')
    op.drop_column('products', 'productPoints')
    op.drop_column('products', 'brandID')
    op.add_column('profile', sa.Column('profileid', sa.Integer(), nullable=False))
    op.drop_column('profile', 'created')
    op.drop_column('profile', 'active')
    op.drop_column('profile', 'whoUpdate')
    op.drop_column('profile', 'lastUpdate')
    op.drop_column('profile', 'profileID')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('profile', sa.Column('profileID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('profile', sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('profile', sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('profile', sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('profile', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('profile', 'profileid')
    op.add_column('products', sa.Column('brandID', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('productPoints', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('brandName', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('created', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('challengeLevel', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('challengeLanguage', sa.VARCHAR(length=150), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('challenges', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_table('admin',
    sa.Column('adminID', sa.INTEGER(), server_default=sa.text('nextval(\'"admin_adminID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('adminID', name='admin_pkey'),
    sa.UniqueConstraint('username', name='admin_username_key')
    )
    op.create_table('challenge_desc',
    sa.Column('challengeID', sa.INTEGER(), server_default=sa.text('nextval(\'"challenge_desc_challengeID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('challengeProblem', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('challengeID', name='challenge_desc_pkey')
    )
    op.create_table('brand_info',
    sa.Column('brandID', sa.INTEGER(), server_default=sa.text('nextval(\'"brand_info_brandID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('brandName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('lastUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('whoUpdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('brandID', name='brand_info_pkey')
    )
    op.drop_table('users')
    op.drop_table('brands')
    # ### end Alembic commands ###
